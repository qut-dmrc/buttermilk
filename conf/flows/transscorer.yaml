
scoreexport:
  _target_: buttermilk.runner.flow.Flow
  source: trans journalists scorer exporter
  data:
    - name: scorer
      type: job
      sql: |
        SELECT flow_id as flow_id, job_id as job_id, timestamp as timestamp, JSON_VALUE(record, "$.record_id") as record_id, JSON_VALUE(record, "$.uri") as uri, JSON_QUERY(record, "$.metadata") as input_metadata, JSON_QUERY(record, "$.components") as input, JSON_QUERY(record, "$.ground_truth.reasons") as ground_truth, JSON_VALUE(outputs, "$.score") as score, JSON_QUERY(outputs, "$.labels") as labels, JSON_QUERY(outputs, "$.reasons") as reasons, JSON_VALUE(parameters, "$.answer.model") as analyst_model, JSON_VALUE(parameters, "$.answer.template") as analyst_template, JSON_VALUE(parameters, "$.answer.criteria") as analyst_criteria, JSON_QUERY(parameters, "$.answer.result") as analyst_answer, JSON_VALUE(parameters, "$.model") as scoring_model

        FROM `prosocial-443205.testing.flow` jobs
        WHERE (JSON_VALUE(outputs, '$.error') IS NULL) AND  TIMESTAMP_TRUNC(timestamp, DAY) >= TIMESTAMP(DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY))  AND JSON_VALUE(agent_info, "$.name") = "scorer" 
      last_n_days: 3
      path: prosocial-443205.testing.flow
      filter:
        agent_info.name: scorer
      columns:
        flow_id: flow_id
        job_id: job_id
        timestamp: timestamp
        record_id: record.record_id
        uri: record.uri
        record: record
        score: outputs.score
        outputs: outputs
        analyst_model: parameters.answer.model
        analyst_template: parameters.answer.template
        analyst_criteria: parameters.answer.criteria
        scoring_model: parameters.model
        answer: parameters.answer
        parameters: parameters

  steps:
    - name: export
      _target_: buttermilk.agents.sheetexporter.GSheetExporter
      convert_json_columns:
        - input_metadata
        - reasons
        - labels
      save:
        type: gsheets
        sheet_name: evals
        title: Trans Guidelines Scorer
      parameters:
        from_dataset: scorer
      # inputs:
      #   flow_id: scorer.flow_id
      #   job_id: scorer.job_id
      #   timestamp: scorer.timestamp
      #   record_id: scorer.record_id
      #   uri: scorer.uri
      #   input_metadata: scorer.input_metadata
      #   input: scorer.record.text
      #   ground_truth: scorer.record.ground_truth
      #   analyst_answer: scorer.parameters.answer.result
      #   score: scorer.score
      #   labels: scorer.outputs.labels
      #   reasons: scorer.outputs.reasons
      #   analyst_model: scorer.analyst_model
      #   analyst_template: scorer.analyst_template
      #   analyst_criteria: scorer.analyst_criteria
      #   scoring_model: scorer.scoring_model


        